// Downloads the parent kafka cdh pom
// Used to set common dependency versions to match the versions in the pom
configurations {
  cdhPom
}

dependencies {
  cdhPom "com.cloudera.cdh:kafka-root:${cdhversion}@pom"
}

  // Resolve the pom from the dependencies/repository
configurations.cdhPom.resolve().each { file ->
  logger.info("Resolving CDH pom file")
  if (file.name.startsWith("kafka-root") && file.name.endsWith(".pom")) {
    // Parse the pom file
    def parser = new XmlSlurper(false, false).parse(file)

    // Read the required version properties and adjust the version originally set in dependencies.gradle
    def zookeeperVersion = parser.properties."cdh.zookeeper.version"
    logger.debug("Setting zookeeper version to $zookeeperVersion")

    def sentryVersion = parser.properties."cdh.sentry.version"
    logger.debug("Setting sentry version to $sentryVersion")

    def slf4jVersion = parser.properties."cdh.slf4j.version"
    logger.debug("Setting slf4j version to $slf4jVersion")

    // Force the versions for all configurations except cdhPom
    configurations.each { config ->
      if(config.name != "cdhPom") {
        config.resolutionStrategy {
          // force cdh versions of dependencies (including transitive)
          force "org.apache.zookeeper:zookeeper:$zookeeperVersion"
          force "org.slf4j:slf4j-api:$slf4jVersion"
          force "org.slf4j:slf4j-log4j12:$slf4jVersion"
          force "org.apache.sentry:sentry-core-model-kafka:$sentryVersion"
          force "org.apache.sentry:sentry-policy-kafka:$sentryVersion"
          force "org.apache.sentry:sentry-binding-kafka:$sentryVersion"
        }
      }
    }
  }
}
