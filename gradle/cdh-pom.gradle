// Downloads the parent kafka cdh pom
// Used to set common dependency versions to match the versions in the pom
configurations {
  cdhPom
}

repositories {
  mavenCentral()
  maven { url mavenArtifactoryUrl }
  maven { url repositoryUrl }
  mavenLocal()
}


dependencies {
  cdhPom "com.cloudera.cdh:cdh-root:${cdhversion}@pom"
}

  // Resolve the pom from the dependencies/repository
configurations.cdhPom.resolve().each { file ->
  logger.info("Resolving CDH pom file")
  if (file.name.startsWith("cdh-root") && file.name.endsWith(".pom")) {
    // Parse the pom file
    def parser = new XmlSlurper(false, false).parse(file)

    // Read the required version properties and adjust the version originally set in dependencies.gradle
    ext.cdhZookeeperVersion = parser.properties."cdh.zookeeper.version"
    logger.info("Setting zookeeper version to $cdhZookeeperVersion")

    ext.cdhSlf4jVersion = parser.properties."cdh.slf4j.version"
    logger.info("Setting slf4j version to $cdhSlf4jVersion")

    ext.cdhJacksonVersion = "2.9.5"
    logger.info("Setting jackson version to $cdhJacksonVersion")

    ext.cdhSentryVersion = parser.properties."cdh.sentry.version"
    logger.info("Setting sentry version to $cdhSentryVersion")

    // Only set if its not already to support CLI overrides
    if (!project.hasProperty('scalaVersion')) {
      scalaVersion = parser.properties."cdh.scala.version".toString()
      logger.info("Setting scala version to $scalaVersion")
    }
  }
}
